//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.07.22 at 03:37:05 PM IST 
//


package com.misys.tiplus2.apps.ti.service.common;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for GWRStep.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="GWRStep">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="x"/>
 *     &lt;enumeration value="a2"/>
 *     &lt;enumeration value="c"/>
 *     &lt;enumeration value="bi"/>
 *     &lt;enumeration value="ie"/>
 *     &lt;enumeration value="er"/>
 *     &lt;enumeration value="c2"/>
 *     &lt;enumeration value="gi"/>
 *     &lt;enumeration value="i"/>
 *     &lt;enumeration value="ci"/>
 *     &lt;enumeration value="c1"/>
 *     &lt;enumeration value="l"/>
 *     &lt;enumeration value="pr"/>
 *     &lt;enumeration value="fp"/>
 *     &lt;enumeration value="p_x"/>
 *     &lt;enumeration value="p_a2"/>
 *     &lt;enumeration value="p_c"/>
 *     &lt;enumeration value="p_ie"/>
 *     &lt;enumeration value="p_er"/>
 *     &lt;enumeration value="p_c2"/>
 *     &lt;enumeration value="p_i"/>
 *     &lt;enumeration value="p_c1"/>
 *     &lt;enumeration value="p_l"/>
 *     &lt;enumeration value="p_pr"/>
 *     &lt;enumeration value="p_fp"/>
 *     &lt;enumeration value="p_rf"/>
 *     &lt;enumeration value="p_ra"/>
 *     &lt;enumeration value="p_rp"/>
 *     &lt;enumeration value="p_a1"/>
 *     &lt;enumeration value="p_w"/>
 *     &lt;enumeration value="rf"/>
 *     &lt;enumeration value="ra"/>
 *     &lt;enumeration value="rp"/>
 *     &lt;enumeration value="a1"/>
 *     &lt;enumeration value="si"/>
 *     &lt;enumeration value="sy"/>
 *     &lt;enumeration value="w"/>
 *     &lt;maxLength value="4"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "GWRStep")
@XmlEnum
public enum GWRStep {

    @XmlEnumValue("x")
    X("x"),
    @XmlEnumValue("a2")
    A_2("a2"),
    @XmlEnumValue("c")
    C("c"),
    @XmlEnumValue("bi")
    BI("bi"),
    @XmlEnumValue("ie")
    IE("ie"),
    @XmlEnumValue("er")
    ER("er"),
    @XmlEnumValue("c2")
    C_2("c2"),
    @XmlEnumValue("gi")
    GI("gi"),
    @XmlEnumValue("i")
    I("i"),
    @XmlEnumValue("ci")
    CI("ci"),
    @XmlEnumValue("c1")
    C_1("c1"),
    @XmlEnumValue("l")
    L("l"),
    @XmlEnumValue("pr")
    PR("pr"),
    @XmlEnumValue("fp")
    FP("fp"),
    @XmlEnumValue("p_x")
    P_X("p_x"),
    @XmlEnumValue("p_a2")
    P_A_2("p_a2"),
    @XmlEnumValue("p_c")
    P_C("p_c"),
    @XmlEnumValue("p_ie")
    P_IE("p_ie"),
    @XmlEnumValue("p_er")
    P_ER("p_er"),
    @XmlEnumValue("p_c2")
    P_C_2("p_c2"),
    @XmlEnumValue("p_i")
    P_I("p_i"),
    @XmlEnumValue("p_c1")
    P_C_1("p_c1"),
    @XmlEnumValue("p_l")
    P_L("p_l"),
    @XmlEnumValue("p_pr")
    P_PR("p_pr"),
    @XmlEnumValue("p_fp")
    P_FP("p_fp"),
    @XmlEnumValue("p_rf")
    P_RF("p_rf"),
    @XmlEnumValue("p_ra")
    P_RA("p_ra"),
    @XmlEnumValue("p_rp")
    P_RP("p_rp"),
    @XmlEnumValue("p_a1")
    P_A_1("p_a1"),
    @XmlEnumValue("p_w")
    P_W("p_w"),
    @XmlEnumValue("rf")
    RF("rf"),
    @XmlEnumValue("ra")
    RA("ra"),
    @XmlEnumValue("rp")
    RP("rp"),
    @XmlEnumValue("a1")
    A_1("a1"),
    @XmlEnumValue("si")
    SI("si"),
    @XmlEnumValue("sy")
    SY("sy"),
    @XmlEnumValue("w")
    W("w");
    private final String value;

    GWRStep(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static GWRStep fromValue(String v) {
        for (GWRStep c: GWRStep.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
